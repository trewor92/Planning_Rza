import * as R from 'ramda'

export const getRootTreeElements = state => {
  const rootElements = R.compose(
    R.values,
    R.filter(R.prop('isRoot'))
  )(state.tree)
  return rootElements
}

export const getChildTreeElements = (state, ownProps) => {
  const { node } = ownProps
  if (!node.children) return []
  const children =  R.map(
    x=>R.find(R.propEq('id',x), state.tree)
  )(node.children)
  return children
}

export const getTableHeader = state =>{
  const header = R.prop('header')(state.table.data)
  return header
}

export const getTableData = state =>{
  const data = R.prop('data')(state.table.data)
  return data
}

export const getTableName = state =>{
  const name = R.prop('name')(state.table.data)
  return name
}

export const getTableError = state =>{
  const {error} = state.table
  return error
}

export const getPath = state =>{
  const {pathname} = state.router.location
  return pathname
}
